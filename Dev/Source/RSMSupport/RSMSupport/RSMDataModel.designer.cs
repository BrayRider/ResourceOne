#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RSM.Support
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RSM")]
	public partial class RSMDataModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccessLevelRole(AccessLevelRole instance);
    partial void UpdateAccessLevelRole(AccessLevelRole instance);
    partial void DeleteAccessLevelRole(AccessLevelRole instance);
    partial void InsertPSImportStatus(PSImportStatus instance);
    partial void UpdatePSImportStatus(PSImportStatus instance);
    partial void DeletePSImportStatus(PSImportStatus instance);
    partial void InsertJob(Job instance);
    partial void UpdateJob(Job instance);
    partial void DeleteJob(Job instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertJCLRoleRule(JCLRoleRule instance);
    partial void UpdateJCLRoleRule(JCLRoleRule instance);
    partial void DeleteJCLRoleRule(JCLRoleRule instance);
    partial void InsertJCLRole(JCLRole instance);
    partial void UpdateJCLRole(JCLRole instance);
    partial void DeleteJCLRole(JCLRole instance);
    partial void InsertPeopleRole(PeopleRole instance);
    partial void UpdatePeopleRole(PeopleRole instance);
    partial void DeletePeopleRole(PeopleRole instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertAccessLevel(AccessLevel instance);
    partial void UpdateAccessLevel(AccessLevel instance);
    partial void DeleteAccessLevel(AccessLevel instance);
    partial void InsertLogEntry(LogEntry instance);
    partial void UpdateLogEntry(LogEntry instance);
    partial void DeleteLogEntry(LogEntry instance);
    partial void InsertExternalSystem(ExternalSystem instance);
    partial void UpdateExternalSystem(ExternalSystem instance);
    partial void DeleteExternalSystem(ExternalSystem instance);
    partial void InsertSetting(Setting instance);
    partial void UpdateSetting(Setting instance);
    partial void DeleteSetting(Setting instance);
    partial void InsertAccessHistory(AccessHistory instance);
    partial void UpdateAccessHistory(AccessHistory instance);
    partial void DeleteAccessHistory(AccessHistory instance);
    partial void InsertLocation(Location instance);
    partial void UpdateLocation(Location instance);
    partial void DeleteLocation(Location instance);
    partial void InsertReader(Reader instance);
    partial void UpdateReader(Reader instance);
    partial void DeleteReader(Reader instance);
    partial void InsertExternalApplicationKey(ExternalApplicationKey instance);
    partial void UpdateExternalApplicationKey(ExternalApplicationKey instance);
    partial void DeleteExternalApplicationKey(ExternalApplicationKey instance);
    partial void InsertPortal(Portal instance);
    partial void UpdatePortal(Portal instance);
    partial void DeletePortal(Portal instance);
    partial void InsertBatchHistory(BatchHistory instance);
    partial void UpdateBatchHistory(BatchHistory instance);
    partial void DeleteBatchHistory(BatchHistory instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    #endregion
		
		public RSMDataModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RSMDataModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RSMDataModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RSMDataModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<EmployeesWithChange> EmployeesWithChanges
		{
			get
			{
				return this.GetTable<EmployeesWithChange>();
			}
		}
		
		public System.Data.Linq.Table<AccessLevelRole> AccessLevelRoles
		{
			get
			{
				return this.GetTable<AccessLevelRole>();
			}
		}
		
		public System.Data.Linq.Table<PSImportStatus> PSImportStatus
		{
			get
			{
				return this.GetTable<PSImportStatus>();
			}
		}
		
		public System.Data.Linq.Table<Job> Jobs
		{
			get
			{
				return this.GetTable<Job>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<NewJob> NewJobs
		{
			get
			{
				return this.GetTable<NewJob>();
			}
		}
		
		public System.Data.Linq.Table<NewDepartment> NewDepartments
		{
			get
			{
				return this.GetTable<NewDepartment>();
			}
		}
		
		public System.Data.Linq.Table<NewLocation> NewLocations
		{
			get
			{
				return this.GetTable<NewLocation>();
			}
		}
		
		public System.Data.Linq.Table<JCLRoleRule> JCLRoleRules
		{
			get
			{
				return this.GetTable<JCLRoleRule>();
			}
		}
		
		public System.Data.Linq.Table<JCLRole> JCLRoles
		{
			get
			{
				return this.GetTable<JCLRole>();
			}
		}
		
		public System.Data.Linq.Table<JCLRuleDisplay> JCLRuleDisplays
		{
			get
			{
				return this.GetTable<JCLRuleDisplay>();
			}
		}
		
		public System.Data.Linq.Table<PeopleRole> PeopleRoles
		{
			get
			{
				return this.GetTable<PeopleRole>();
			}
		}
		
		public System.Data.Linq.Table<NewFire> NewFires
		{
			get
			{
				return this.GetTable<NewFire>();
			}
		}
		
		public System.Data.Linq.Table<NewHire> NewHires
		{
			get
			{
				return this.GetTable<NewHire>();
			}
		}
		
		public System.Data.Linq.Table<EmpWithNonStatusChange> EmpWithNonStatusChanges
		{
			get
			{
				return this.GetTable<EmpWithNonStatusChange>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<AccessLevel> AccessLevels
		{
			get
			{
				return this.GetTable<AccessLevel>();
			}
		}
		
		public System.Data.Linq.Table<JobDisplay> JobDisplays
		{
			get
			{
				return this.GetTable<JobDisplay>();
			}
		}
		
		public System.Data.Linq.Table<AccessLevelReport> AccessLevelReports
		{
			get
			{
				return this.GetTable<AccessLevelReport>();
			}
		}
		
		public System.Data.Linq.Table<EmpAccessLevelReport> EmpAccessLevelReports
		{
			get
			{
				return this.GetTable<EmpAccessLevelReport>();
			}
		}
		
		public System.Data.Linq.Table<LogEntry> LogEntries
		{
			get
			{
				return this.GetTable<LogEntry>();
			}
		}
		
		public System.Data.Linq.Table<ExternalSystem> ExternalSystems
		{
			get
			{
				return this.GetTable<ExternalSystem>();
			}
		}
		
		public System.Data.Linq.Table<Setting> Settings
		{
			get
			{
				return this.GetTable<Setting>();
			}
		}
		
		public System.Data.Linq.Table<AccessHistory> AccessHistories
		{
			get
			{
				return this.GetTable<AccessHistory>();
			}
		}
		
		public System.Data.Linq.Table<Location> Locations
		{
			get
			{
				return this.GetTable<Location>();
			}
		}
		
		public System.Data.Linq.Table<Reader> Readers
		{
			get
			{
				return this.GetTable<Reader>();
			}
		}
		
		public System.Data.Linq.Table<ExternalApplicationKey> ExternalApplicationKeys
		{
			get
			{
				return this.GetTable<ExternalApplicationKey>();
			}
		}
		
		public System.Data.Linq.Table<Portal> Portals
		{
			get
			{
				return this.GetTable<Portal>();
			}
		}
		
		public System.Data.Linq.Table<BatchHistory> BatchHistories
		{
			get
			{
				return this.GetTable<BatchHistory>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LevelsAvailableForRole")]
		public ISingleResult<LevelsAvailableForRoleResult> LevelsAvailableForRole([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roleID);
			return ((ISingleResult<LevelsAvailableForRoleResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RolesAvialableForPerson")]
		public ISingleResult<Role> RolesAvialableForPerson([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PersonID", DbType="Int")] System.Nullable<int> personID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), personID);
			return ((ISingleResult<Role>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LevelsAssignedToPerson")]
		public ISingleResult<AccessLevel> LevelsAssignedToPerson([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PersonID", DbType="Int")] System.Nullable<int> personID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), personID);
			return ((ISingleResult<AccessLevel>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PeopleWithRole")]
		public ISingleResult<Person> PeopleWithRole([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roleID);
			return ((ISingleResult<Person>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RolesWithLevel")]
		public ISingleResult<Role> RolesWithLevel([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LevelID", DbType="Int")] System.Nullable<int> levelID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), levelID);
			return ((ISingleResult<Role>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RolesAvialableForRule")]
		public ISingleResult<Role> RolesAvialableForRule([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RuleID", DbType="Int")] System.Nullable<int> ruleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ruleID);
			return ((ISingleResult<Role>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetEmpsWithNonStatusChanges")]
		public ISingleResult<Person> GetEmpsWithNonStatusChanges()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Person>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RulesWithRole")]
		public ISingleResult<JCLRoleRule> RulesWithRole([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roleID);
			return ((ISingleResult<JCLRoleRule>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteRole")]
		public int DeleteRole([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteRule")]
		public int DeleteRule([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FlagAllLevelsAsMissing")]
		public int FlagAllLevelsAsMissing()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteMissingLevels")]
		public int DeleteMissingLevels()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteLevel")]
		public int DeleteLevel([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PeopleWithLevel")]
		public ISingleResult<Person> PeopleWithLevel([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LevelID", DbType="Int")] System.Nullable<int> levelID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), levelID);
			return ((ISingleResult<Person>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeesWithChanges")]
	public partial class EmployeesWithChange
	{
		
		private int _PersonID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _MiddleName;
		
		private string _DeptID;
		
		private string _DeptDescr;
		
		private string _JobCode;
		
		private string _JobDescr;
		
		private int _BadgeNumber;
		
		private string _Facility;
		
		private bool _Active;
		
		private System.Nullable<System.DateTime> _LastUpdated;
		
		private System.Nullable<int> _LastUpdateMask;
		
		public EmployeesWithChange()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="Int NOT NULL")]
		public int PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this._PersonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this._MiddleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DeptID
		{
			get
			{
				return this._DeptID;
			}
			set
			{
				if ((this._DeptID != value))
				{
					this._DeptID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptDescr", DbType="NVarChar(50)")]
		public string DeptDescr
		{
			get
			{
				return this._DeptDescr;
			}
			set
			{
				if ((this._DeptDescr != value))
				{
					this._DeptDescr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string JobCode
		{
			get
			{
				return this._JobCode;
			}
			set
			{
				if ((this._JobCode != value))
				{
					this._JobCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobDescr", DbType="NVarChar(50)")]
		public string JobDescr
		{
			get
			{
				return this._JobDescr;
			}
			set
			{
				if ((this._JobDescr != value))
				{
					this._JobDescr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BadgeNumber", DbType="Int NOT NULL")]
		public int BadgeNumber
		{
			get
			{
				return this._BadgeNumber;
			}
			set
			{
				if ((this._BadgeNumber != value))
				{
					this._BadgeNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facility", DbType="NVarChar(50)")]
		public string Facility
		{
			get
			{
				return this._Facility;
			}
			set
			{
				if ((this._Facility != value))
				{
					this._Facility = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="Date")]
		public System.Nullable<System.DateTime> LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this._LastUpdated = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateMask", DbType="Int")]
		public System.Nullable<int> LastUpdateMask
		{
			get
			{
				return this._LastUpdateMask;
			}
			set
			{
				if ((this._LastUpdateMask != value))
				{
					this._LastUpdateMask = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccessLevelRoles")]
	public partial class AccessLevelRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _AccessLevelID;
		
		private int _RoleID;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<AccessLevel> _AccessLevel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAccessLevelIDChanging(int value);
    partial void OnAccessLevelIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    #endregion
		
		public AccessLevelRole()
		{
			this._Role = default(EntityRef<Role>);
			this._AccessLevel = default(EntityRef<AccessLevel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessLevelID", DbType="Int NOT NULL")]
		public int AccessLevelID
		{
			get
			{
				return this._AccessLevelID;
			}
			set
			{
				if ((this._AccessLevelID != value))
				{
					if (this._AccessLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccessLevelIDChanging(value);
					this.SendPropertyChanging();
					this._AccessLevelID = value;
					this.SendPropertyChanged("AccessLevelID");
					this.OnAccessLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_AccessLevelRole", Storage="_Role", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.AccessLevelRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.AccessLevelRoles.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccessLevel_AccessLevelRole", Storage="_AccessLevel", ThisKey="AccessLevelID", OtherKey="AccessLevelID", IsForeignKey=true)]
		public AccessLevel AccessLevel
		{
			get
			{
				return this._AccessLevel.Entity;
			}
			set
			{
				AccessLevel previousValue = this._AccessLevel.Entity;
				if (((previousValue != value) 
							|| (this._AccessLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccessLevel.Entity = null;
						previousValue.AccessLevelRoles.Remove(this);
					}
					this._AccessLevel.Entity = value;
					if ((value != null))
					{
						value.AccessLevelRoles.Add(this);
						this._AccessLevelID = value.AccessLevelID;
					}
					else
					{
						this._AccessLevelID = default(int);
					}
					this.SendPropertyChanged("AccessLevel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PSImportStatus")]
	public partial class PSImportStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _importDate;
		
		private string _filename;
		
		private bool _success;
		
		private string _message;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnimportDateChanging(System.DateTime value);
    partial void OnimportDateChanged();
    partial void OnfilenameChanging(string value);
    partial void OnfilenameChanged();
    partial void OnsuccessChanging(bool value);
    partial void OnsuccessChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    #endregion
		
		public PSImportStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_importDate", DbType="DateTime NOT NULL")]
		public System.DateTime importDate
		{
			get
			{
				return this._importDate;
			}
			set
			{
				if ((this._importDate != value))
				{
					this.OnimportDateChanging(value);
					this.SendPropertyChanging();
					this._importDate = value;
					this.SendPropertyChanged("importDate");
					this.OnimportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_filename", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string filename
		{
			get
			{
				return this._filename;
			}
			set
			{
				if ((this._filename != value))
				{
					this.OnfilenameChanging(value);
					this.SendPropertyChanging();
					this._filename = value;
					this.SendPropertyChanged("filename");
					this.OnfilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_success", DbType="Bit NOT NULL")]
		public bool success
		{
			get
			{
				return this._success;
			}
			set
			{
				if ((this._success != value))
				{
					this.OnsuccessChanging(value);
					this.SendPropertyChanging();
					this._success = value;
					this.SendPropertyChanged("success");
					this.OnsuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="NVarChar(MAX)")]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Jobs")]
	public partial class Job : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _JobCode;
		
		private string _JobDescription;
		
		private System.DateTime _DateAdded;
		
		private string _DisplayDescription;
		
		private string _Credentials;
		
		private EntityRef<JCLRoleRule> _JCLRoleRule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobCodeChanging(string value);
    partial void OnJobCodeChanged();
    partial void OnJobDescriptionChanging(string value);
    partial void OnJobDescriptionChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    partial void OnDisplayDescriptionChanging(string value);
    partial void OnDisplayDescriptionChanged();
    partial void OnCredentialsChanging(string value);
    partial void OnCredentialsChanged();
    #endregion
		
		public Job()
		{
			this._JCLRoleRule = default(EntityRef<JCLRoleRule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string JobCode
		{
			get
			{
				return this._JobCode;
			}
			set
			{
				if ((this._JobCode != value))
				{
					if (this._JCLRoleRule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobCodeChanging(value);
					this.SendPropertyChanging();
					this._JobCode = value;
					this.SendPropertyChanged("JobCode");
					this.OnJobCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobDescription", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string JobDescription
		{
			get
			{
				return this._JobDescription;
			}
			set
			{
				if ((this._JobDescription != value))
				{
					this.OnJobDescriptionChanging(value);
					this.SendPropertyChanging();
					this._JobDescription = value;
					this.SendPropertyChanged("JobDescription");
					this.OnJobDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="Date NOT NULL")]
		public System.DateTime DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayDescription", DbType="nvarchar(MAX)")]
		public string DisplayDescription
		{
			get
			{
				return this._DisplayDescription;
			}
			set
			{
				if ((this._DisplayDescription != value))
				{
					this.OnDisplayDescriptionChanging(value);
					this.SendPropertyChanging();
					this._DisplayDescription = value;
					this.SendPropertyChanged("DisplayDescription");
					this.OnDisplayDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credentials", DbType="NVarChar(MAX)")]
		public string Credentials
		{
			get
			{
				return this._Credentials;
			}
			set
			{
				if ((this._Credentials != value))
				{
					this.OnCredentialsChanging(value);
					this.SendPropertyChanging();
					this._Credentials = value;
					this.SendPropertyChanged("Credentials");
					this.OnCredentialsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JCLRoleRule_Job", Storage="_JCLRoleRule", ThisKey="JobCode", OtherKey="JobCode", IsForeignKey=true)]
		public JCLRoleRule JCLRoleRule
		{
			get
			{
				return this._JCLRoleRule.Entity;
			}
			set
			{
				JCLRoleRule previousValue = this._JCLRoleRule.Entity;
				if (((previousValue != value) 
							|| (this._JCLRoleRule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JCLRoleRule.Entity = null;
						previousValue.Job = null;
					}
					this._JCLRoleRule.Entity = value;
					if ((value != null))
					{
						value.Job = this;
						this._JobCode = value.JobCode;
					}
					else
					{
						this._JobCode = default(string);
					}
					this.SendPropertyChanged("JCLRoleRule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Departments")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DeptID;
		
		private string _DeptDescr;
		
		private System.DateTime _DateAdded;
		
		private EntityRef<JCLRoleRule> _JCLRoleRule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeptIDChanging(string value);
    partial void OnDeptIDChanged();
    partial void OnDeptDescrChanging(string value);
    partial void OnDeptDescrChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    #endregion
		
		public Department()
		{
			this._JCLRoleRule = default(EntityRef<JCLRoleRule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DeptID
		{
			get
			{
				return this._DeptID;
			}
			set
			{
				if ((this._DeptID != value))
				{
					if (this._JCLRoleRule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeptIDChanging(value);
					this.SendPropertyChanging();
					this._DeptID = value;
					this.SendPropertyChanged("DeptID");
					this.OnDeptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptDescr", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DeptDescr
		{
			get
			{
				return this._DeptDescr;
			}
			set
			{
				if ((this._DeptDescr != value))
				{
					this.OnDeptDescrChanging(value);
					this.SendPropertyChanging();
					this._DeptDescr = value;
					this.SendPropertyChanged("DeptDescr");
					this.OnDeptDescrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JCLRoleRule_Department", Storage="_JCLRoleRule", ThisKey="DeptID", OtherKey="DeptID", IsForeignKey=true)]
		public JCLRoleRule JCLRoleRule
		{
			get
			{
				return this._JCLRoleRule.Entity;
			}
			set
			{
				JCLRoleRule previousValue = this._JCLRoleRule.Entity;
				if (((previousValue != value) 
							|| (this._JCLRoleRule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JCLRoleRule.Entity = null;
						previousValue.Departments = null;
					}
					this._JCLRoleRule.Entity = value;
					if ((value != null))
					{
						value.Departments = this;
						this._DeptID = value.DeptID;
					}
					else
					{
						this._DeptID = default(string);
					}
					this.SendPropertyChanged("JCLRoleRule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewJobs")]
	public partial class NewJob
	{
		
		private string _JobCode;
		
		private string _JobDescr;
		
		public NewJob()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string JobCode
		{
			get
			{
				return this._JobCode;
			}
			set
			{
				if ((this._JobCode != value))
				{
					this._JobCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobDescr", DbType="NVarChar(50)")]
		public string JobDescr
		{
			get
			{
				return this._JobDescr;
			}
			set
			{
				if ((this._JobDescr != value))
				{
					this._JobDescr = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewDepartments")]
	public partial class NewDepartment
	{
		
		private string _DeptID;
		
		private string _DeptDescr;
		
		public NewDepartment()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DeptID
		{
			get
			{
				return this._DeptID;
			}
			set
			{
				if ((this._DeptID != value))
				{
					this._DeptID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptDescr", DbType="NVarChar(50)")]
		public string DeptDescr
		{
			get
			{
				return this._DeptDescr;
			}
			set
			{
				if ((this._DeptDescr != value))
				{
					this._DeptDescr = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewLocations")]
	public partial class NewLocation
	{
		
		private string _Facility;
		
		public NewLocation()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facility", DbType="NVarChar(50)")]
		public string Facility
		{
			get
			{
				return this._Facility;
			}
			set
			{
				if ((this._Facility != value))
				{
					this._Facility = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JCLRoleRule")]
	public partial class JCLRoleRule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _JobCode;
		
		private string _DeptID;
		
		private int _Location;
		
		private EntityRef<Job> _Jobs;
		
		private EntityRef<Department> _Departments;
		
		private EntitySet<JCLRole> _JCLRoles;
		
		private EntityRef<Location> _Locations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnJobCodeChanging(string value);
    partial void OnJobCodeChanged();
    partial void OnDeptIDChanging(string value);
    partial void OnDeptIDChanged();
    partial void OnLocationChanging(int value);
    partial void OnLocationChanged();
    #endregion
		
		public JCLRoleRule()
		{
			this._Jobs = default(EntityRef<Job>);
			this._Departments = default(EntityRef<Department>);
			this._JCLRoles = new EntitySet<JCLRole>(new Action<JCLRole>(this.attach_JCLRoles), new Action<JCLRole>(this.detach_JCLRoles));
			this._Locations = default(EntityRef<Location>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCode", DbType="NVarChar(50)", CanBeNull=false)]
		public string JobCode
		{
			get
			{
				return this._JobCode;
			}
			set
			{
				if ((this._JobCode != value))
				{
					this.OnJobCodeChanging(value);
					this.SendPropertyChanging();
					this._JobCode = value;
					this.SendPropertyChanged("JobCode");
					this.OnJobCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DeptID
		{
			get
			{
				return this._DeptID;
			}
			set
			{
				if ((this._DeptID != value))
				{
					this.OnDeptIDChanging(value);
					this.SendPropertyChanging();
					this._DeptID = value;
					this.SendPropertyChanged("DeptID");
					this.OnDeptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="Int NOT NULL")]
		public int Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					if (this._Locations.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JCLRoleRule_Job", Storage="_Jobs", ThisKey="JobCode", OtherKey="JobCode", IsUnique=true, IsForeignKey=false)]
		public Job Job
		{
			get
			{
				return this._Jobs.Entity;
			}
			set
			{
				Job previousValue = this._Jobs.Entity;
				if (((previousValue != value) 
							|| (this._Jobs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jobs.Entity = null;
						previousValue.JCLRoleRule = null;
					}
					this._Jobs.Entity = value;
					if ((value != null))
					{
						value.JCLRoleRule = this;
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JCLRoleRule_Department", Storage="_Departments", ThisKey="DeptID", OtherKey="DeptID", IsUnique=true, IsForeignKey=false)]
		public Department Departments
		{
			get
			{
				return this._Departments.Entity;
			}
			set
			{
				Department previousValue = this._Departments.Entity;
				if (((previousValue != value) 
							|| (this._Departments.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Departments.Entity = null;
						previousValue.JCLRoleRule = null;
					}
					this._Departments.Entity = value;
					if ((value != null))
					{
						value.JCLRoleRule = this;
					}
					this.SendPropertyChanged("Departments");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JCLRoleRule_JCLRole", Storage="_JCLRoles", ThisKey="ID", OtherKey="RuleID")]
		public EntitySet<JCLRole> JCLRoles
		{
			get
			{
				return this._JCLRoles;
			}
			set
			{
				this._JCLRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_JCLRoleRule", Storage="_Locations", ThisKey="Location", OtherKey="LocationID", IsForeignKey=true)]
		public Location Locations
		{
			get
			{
				return this._Locations.Entity;
			}
			set
			{
				Location previousValue = this._Locations.Entity;
				if (((previousValue != value) 
							|| (this._Locations.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Locations.Entity = null;
						previousValue.JCLRoleRules.Remove(this);
					}
					this._Locations.Entity = value;
					if ((value != null))
					{
						value.JCLRoleRules.Add(this);
						this._Location = value.LocationID;
					}
					else
					{
						this._Location = default(int);
					}
					this.SendPropertyChanged("Locations");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JCLRoles(JCLRole entity)
		{
			this.SendPropertyChanging();
			entity.JCLRoleRule = this;
		}
		
		private void detach_JCLRoles(JCLRole entity)
		{
			this.SendPropertyChanging();
			entity.JCLRoleRule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JCLRole")]
	public partial class JCLRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RuleID;
		
		private int _RoleID;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<JCLRoleRule> _JCLRoleRule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRuleIDChanging(int value);
    partial void OnRuleIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    #endregion
		
		public JCLRole()
		{
			this._Role = default(EntityRef<Role>);
			this._JCLRoleRule = default(EntityRef<JCLRoleRule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RuleID", DbType="Int NOT NULL")]
		public int RuleID
		{
			get
			{
				return this._RuleID;
			}
			set
			{
				if ((this._RuleID != value))
				{
					if (this._JCLRoleRule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRuleIDChanging(value);
					this.SendPropertyChanging();
					this._RuleID = value;
					this.SendPropertyChanged("RuleID");
					this.OnRuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JCLRole_Role", Storage="_Role", ThisKey="RoleID", OtherKey="RoleID", IsUnique=true, IsForeignKey=false)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.JCLRole = null;
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.JCLRole = this;
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JCLRoleRule_JCLRole", Storage="_JCLRoleRule", ThisKey="RuleID", OtherKey="ID", IsForeignKey=true)]
		public JCLRoleRule JCLRoleRule
		{
			get
			{
				return this._JCLRoleRule.Entity;
			}
			set
			{
				JCLRoleRule previousValue = this._JCLRoleRule.Entity;
				if (((previousValue != value) 
							|| (this._JCLRoleRule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JCLRoleRule.Entity = null;
						previousValue.JCLRoles.Remove(this);
					}
					this._JCLRoleRule.Entity = value;
					if ((value != null))
					{
						value.JCLRoles.Add(this);
						this._RuleID = value.ID;
					}
					else
					{
						this._RuleID = default(int);
					}
					this.SendPropertyChanged("JCLRoleRule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JCLRuleDisplay")]
	public partial class JCLRuleDisplay
	{
		
		private int _ID;
		
		private string _JobCode;
		
		private string _JobDescription;
		
		private string _DeptDescr;
		
		private string _LocationName;
		
		public JCLRuleDisplay()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCode", DbType="nvarchar(50) not null", CanBeNull=false)]
		public string JobCode
		{
			get
			{
				return this._JobCode;
			}
			set
			{
				if ((this._JobCode != value))
				{
					this._JobCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobDescription", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string JobDescription
		{
			get
			{
				return this._JobDescription;
			}
			set
			{
				if ((this._JobDescription != value))
				{
					this._JobDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptDescr", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DeptDescr
		{
			get
			{
				return this._DeptDescr;
			}
			set
			{
				if ((this._DeptDescr != value))
				{
					this._DeptDescr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PeopleRoles")]
	public partial class PeopleRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PersonID;
		
		private int _RoleID;
		
		private bool _IsException;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(int value);
    partial void OnPersonIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnIsExceptionChanging(bool value);
    partial void OnIsExceptionChanged();
    #endregion
		
		public PeopleRole()
		{
			this._Role = default(EntityRef<Role>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="Int NOT NULL")]
		public int PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsException", DbType="Bit NOT NULL")]
		public bool IsException
		{
			get
			{
				return this._IsException;
			}
			set
			{
				if ((this._IsException != value))
				{
					this.OnIsExceptionChanging(value);
					this.SendPropertyChanging();
					this._IsException = value;
					this.SendPropertyChanged("IsException");
					this.OnIsExceptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_PeopleRole", Storage="_Role", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.PeopleRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.PeopleRoles.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_PeopleRole", Storage="_Person", ThisKey="PersonID", OtherKey="PersonID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.PeopleRoles.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.PeopleRoles.Add(this);
						this._PersonID = value.PersonID;
					}
					else
					{
						this._PersonID = default(int);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewFires")]
	public partial class NewFire
	{
		
		private int _PersonID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _MiddleName;
		
		private string _DeptID;
		
		private string _DeptDescr;
		
		private string _JobCode;
		
		private string _JobDescr;
		
		private string _BadgeNumber;
		
		private string _Facility;
		
		private bool _Active;
		
		private System.Nullable<System.DateTime> _LastUpdated;
		
		private int _LastUpdateMask;
		
		private string _username;
		
		private string _password;
		
		private System.Nullable<System.DateTime> _LastLogin;
		
		private System.Nullable<System.DateTime> _LastActivity;
		
		private int _FailedPasswordAttempts;
		
		private bool _LockedOut;
		
		private bool _IsAdmin;
		
		private bool _NeedsApproval;
		
		private string _EmployeeID;
		
		public NewFire()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="Int NOT NULL")]
		public int PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this._PersonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this._MiddleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DeptID
		{
			get
			{
				return this._DeptID;
			}
			set
			{
				if ((this._DeptID != value))
				{
					this._DeptID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptDescr", DbType="NVarChar(50)")]
		public string DeptDescr
		{
			get
			{
				return this._DeptDescr;
			}
			set
			{
				if ((this._DeptDescr != value))
				{
					this._DeptDescr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string JobCode
		{
			get
			{
				return this._JobCode;
			}
			set
			{
				if ((this._JobCode != value))
				{
					this._JobCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobDescr", DbType="NVarChar(50)")]
		public string JobDescr
		{
			get
			{
				return this._JobDescr;
			}
			set
			{
				if ((this._JobDescr != value))
				{
					this._JobDescr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BadgeNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BadgeNumber
		{
			get
			{
				return this._BadgeNumber;
			}
			set
			{
				if ((this._BadgeNumber != value))
				{
					this._BadgeNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facility", DbType="NVarChar(50)")]
		public string Facility
		{
			get
			{
				return this._Facility;
			}
			set
			{
				if ((this._Facility != value))
				{
					this._Facility = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="Date")]
		public System.Nullable<System.DateTime> LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this._LastUpdated = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateMask", DbType="Int NOT NULL")]
		public int LastUpdateMask
		{
			get
			{
				return this._LastUpdateMask;
			}
			set
			{
				if ((this._LastUpdateMask != value))
				{
					this._LastUpdateMask = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(MAX)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this._LastLogin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivity", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastActivity
		{
			get
			{
				return this._LastActivity;
			}
			set
			{
				if ((this._LastActivity != value))
				{
					this._LastActivity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttempts", DbType="Int NOT NULL")]
		public int FailedPasswordAttempts
		{
			get
			{
				return this._FailedPasswordAttempts;
			}
			set
			{
				if ((this._FailedPasswordAttempts != value))
				{
					this._FailedPasswordAttempts = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockedOut", DbType="Bit NOT NULL")]
		public bool LockedOut
		{
			get
			{
				return this._LockedOut;
			}
			set
			{
				if ((this._LockedOut != value))
				{
					this._LockedOut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit NOT NULL")]
		public bool IsAdmin
		{
			get
			{
				return this._IsAdmin;
			}
			set
			{
				if ((this._IsAdmin != value))
				{
					this._IsAdmin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedsApproval", DbType="Bit NOT NULL")]
		public bool NeedsApproval
		{
			get
			{
				return this._NeedsApproval;
			}
			set
			{
				if ((this._NeedsApproval != value))
				{
					this._NeedsApproval = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this._EmployeeID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewHires")]
	public partial class NewHire
	{
		
		private int _PersonID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _MiddleName;
		
		private string _DeptID;
		
		private string _DeptDescr;
		
		private string _JobCode;
		
		private string _JobDescr;
		
		private string _BadgeNumber;
		
		private string _Facility;
		
		private bool _Active;
		
		private System.Nullable<System.DateTime> _LastUpdated;
		
		private int _LastUpdateMask;
		
		private string _username;
		
		private string _password;
		
		private System.Nullable<System.DateTime> _LastLogin;
		
		private System.Nullable<System.DateTime> _LastActivity;
		
		private int _FailedPasswordAttempts;
		
		private bool _LockedOut;
		
		private bool _IsAdmin;
		
		private bool _NeedsApproval;
		
		private string _EmployeeID;
		
		public NewHire()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="Int NOT NULL")]
		public int PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this._PersonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this._MiddleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DeptID
		{
			get
			{
				return this._DeptID;
			}
			set
			{
				if ((this._DeptID != value))
				{
					this._DeptID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptDescr", DbType="NVarChar(50)")]
		public string DeptDescr
		{
			get
			{
				return this._DeptDescr;
			}
			set
			{
				if ((this._DeptDescr != value))
				{
					this._DeptDescr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string JobCode
		{
			get
			{
				return this._JobCode;
			}
			set
			{
				if ((this._JobCode != value))
				{
					this._JobCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobDescr", DbType="NVarChar(50)")]
		public string JobDescr
		{
			get
			{
				return this._JobDescr;
			}
			set
			{
				if ((this._JobDescr != value))
				{
					this._JobDescr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BadgeNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BadgeNumber
		{
			get
			{
				return this._BadgeNumber;
			}
			set
			{
				if ((this._BadgeNumber != value))
				{
					this._BadgeNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facility", DbType="NVarChar(50)")]
		public string Facility
		{
			get
			{
				return this._Facility;
			}
			set
			{
				if ((this._Facility != value))
				{
					this._Facility = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="Date")]
		public System.Nullable<System.DateTime> LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this._LastUpdated = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateMask", DbType="Int NOT NULL")]
		public int LastUpdateMask
		{
			get
			{
				return this._LastUpdateMask;
			}
			set
			{
				if ((this._LastUpdateMask != value))
				{
					this._LastUpdateMask = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(MAX)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this._LastLogin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivity", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastActivity
		{
			get
			{
				return this._LastActivity;
			}
			set
			{
				if ((this._LastActivity != value))
				{
					this._LastActivity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttempts", DbType="Int NOT NULL")]
		public int FailedPasswordAttempts
		{
			get
			{
				return this._FailedPasswordAttempts;
			}
			set
			{
				if ((this._FailedPasswordAttempts != value))
				{
					this._FailedPasswordAttempts = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockedOut", DbType="Bit NOT NULL")]
		public bool LockedOut
		{
			get
			{
				return this._LockedOut;
			}
			set
			{
				if ((this._LockedOut != value))
				{
					this._LockedOut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit NOT NULL")]
		public bool IsAdmin
		{
			get
			{
				return this._IsAdmin;
			}
			set
			{
				if ((this._IsAdmin != value))
				{
					this._IsAdmin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedsApproval", DbType="Bit NOT NULL")]
		public bool NeedsApproval
		{
			get
			{
				return this._NeedsApproval;
			}
			set
			{
				if ((this._NeedsApproval != value))
				{
					this._NeedsApproval = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this._EmployeeID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmpWithNonStatusChanges")]
	public partial class EmpWithNonStatusChange
	{
		
		private int _PersonID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _MiddleName;
		
		private string _DeptID;
		
		private string _DeptDescr;
		
		private string _JobCode;
		
		private string _JobDescr;
		
		private string _BadgeNumber;
		
		private string _Facility;
		
		private bool _Active;
		
		private System.Nullable<System.DateTime> _LastUpdated;
		
		private int _LastUpdateMask;
		
		private string _username;
		
		private string _password;
		
		private System.Nullable<System.DateTime> _LastLogin;
		
		private System.Nullable<System.DateTime> _LastActivity;
		
		private int _FailedPasswordAttempts;
		
		private bool _LockedOut;
		
		private bool _IsAdmin;
		
		private bool _NeedsApproval;
		
		private string _EmployeeID;
		
		public EmpWithNonStatusChange()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="Int NOT NULL")]
		public int PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this._PersonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this._MiddleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DeptID
		{
			get
			{
				return this._DeptID;
			}
			set
			{
				if ((this._DeptID != value))
				{
					this._DeptID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptDescr", DbType="NVarChar(50)")]
		public string DeptDescr
		{
			get
			{
				return this._DeptDescr;
			}
			set
			{
				if ((this._DeptDescr != value))
				{
					this._DeptDescr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string JobCode
		{
			get
			{
				return this._JobCode;
			}
			set
			{
				if ((this._JobCode != value))
				{
					this._JobCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobDescr", DbType="NVarChar(50)")]
		public string JobDescr
		{
			get
			{
				return this._JobDescr;
			}
			set
			{
				if ((this._JobDescr != value))
				{
					this._JobDescr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BadgeNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BadgeNumber
		{
			get
			{
				return this._BadgeNumber;
			}
			set
			{
				if ((this._BadgeNumber != value))
				{
					this._BadgeNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facility", DbType="NVarChar(50)")]
		public string Facility
		{
			get
			{
				return this._Facility;
			}
			set
			{
				if ((this._Facility != value))
				{
					this._Facility = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="Date")]
		public System.Nullable<System.DateTime> LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this._LastUpdated = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateMask", DbType="Int NOT NULL")]
		public int LastUpdateMask
		{
			get
			{
				return this._LastUpdateMask;
			}
			set
			{
				if ((this._LastUpdateMask != value))
				{
					this._LastUpdateMask = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(MAX)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this._LastLogin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivity", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastActivity
		{
			get
			{
				return this._LastActivity;
			}
			set
			{
				if ((this._LastActivity != value))
				{
					this._LastActivity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttempts", DbType="Int NOT NULL")]
		public int FailedPasswordAttempts
		{
			get
			{
				return this._FailedPasswordAttempts;
			}
			set
			{
				if ((this._FailedPasswordAttempts != value))
				{
					this._FailedPasswordAttempts = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockedOut", DbType="Bit NOT NULL")]
		public bool LockedOut
		{
			get
			{
				return this._LockedOut;
			}
			set
			{
				if ((this._LockedOut != value))
				{
					this._LockedOut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit NOT NULL")]
		public bool IsAdmin
		{
			get
			{
				return this._IsAdmin;
			}
			set
			{
				if ((this._IsAdmin != value))
				{
					this._IsAdmin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedsApproval", DbType="Bit NOT NULL")]
		public bool NeedsApproval
		{
			get
			{
				return this._NeedsApproval;
			}
			set
			{
				if ((this._NeedsApproval != value))
				{
					this._NeedsApproval = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this._EmployeeID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleID;
		
		private string _RoleName;
		
		private string _RoleDesc;
		
		private EntitySet<AccessLevelRole> _AccessLevelRoles;
		
		private EntitySet<PeopleRole> _PeopleRoles;
		
		private EntityRef<JCLRole> _JCLRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnRoleDescChanging(string value);
    partial void OnRoleDescChanged();
    #endregion
		
		public Role()
		{
			this._AccessLevelRoles = new EntitySet<AccessLevelRole>(new Action<AccessLevelRole>(this.attach_AccessLevelRoles), new Action<AccessLevelRole>(this.detach_AccessLevelRoles));
			this._PeopleRoles = new EntitySet<PeopleRole>(new Action<PeopleRole>(this.attach_PeopleRoles), new Action<PeopleRole>(this.detach_PeopleRoles));
			this._JCLRole = default(EntityRef<JCLRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._JCLRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDesc", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string RoleDesc
		{
			get
			{
				return this._RoleDesc;
			}
			set
			{
				if ((this._RoleDesc != value))
				{
					this.OnRoleDescChanging(value);
					this.SendPropertyChanging();
					this._RoleDesc = value;
					this.SendPropertyChanged("RoleDesc");
					this.OnRoleDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_AccessLevelRole", Storage="_AccessLevelRoles", ThisKey="RoleID", OtherKey="RoleID")]
		public EntitySet<AccessLevelRole> AccessLevelRoles
		{
			get
			{
				return this._AccessLevelRoles;
			}
			set
			{
				this._AccessLevelRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_PeopleRole", Storage="_PeopleRoles", ThisKey="RoleID", OtherKey="RoleID")]
		public EntitySet<PeopleRole> PeopleRoles
		{
			get
			{
				return this._PeopleRoles;
			}
			set
			{
				this._PeopleRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JCLRole_Role", Storage="_JCLRole", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public JCLRole JCLRole
		{
			get
			{
				return this._JCLRole.Entity;
			}
			set
			{
				JCLRole previousValue = this._JCLRole.Entity;
				if (((previousValue != value) 
							|| (this._JCLRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JCLRole.Entity = null;
						previousValue.Role = null;
					}
					this._JCLRole.Entity = value;
					if ((value != null))
					{
						value.Role = this;
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("JCLRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AccessLevelRoles(AccessLevelRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_AccessLevelRoles(AccessLevelRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_PeopleRoles(PeopleRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_PeopleRoles(PeopleRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccessLevels")]
	public partial class AccessLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccessLevelID;
		
		private string _AccessLevelName;
		
		private string _AccessLevelDesc;
		
		private System.Nullable<int> _ReaderGroupID;
		
		private System.Nullable<int> _TimeSpecID;
		
		private System.Nullable<int> _ThreatLevelGroupID;
		
		private bool _Missing;
		
		private EntitySet<AccessLevelRole> _AccessLevelRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccessLevelIDChanging(int value);
    partial void OnAccessLevelIDChanged();
    partial void OnAccessLevelNameChanging(string value);
    partial void OnAccessLevelNameChanged();
    partial void OnAccessLevelDescChanging(string value);
    partial void OnAccessLevelDescChanged();
    partial void OnReaderGroupIDChanging(System.Nullable<int> value);
    partial void OnReaderGroupIDChanged();
    partial void OnTimeSpecIDChanging(System.Nullable<int> value);
    partial void OnTimeSpecIDChanged();
    partial void OnThreatLevelGroupIDChanging(System.Nullable<int> value);
    partial void OnThreatLevelGroupIDChanged();
    partial void OnMissingChanging(bool value);
    partial void OnMissingChanged();
    #endregion
		
		public AccessLevel()
		{
			this._AccessLevelRoles = new EntitySet<AccessLevelRole>(new Action<AccessLevelRole>(this.attach_AccessLevelRoles), new Action<AccessLevelRole>(this.detach_AccessLevelRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessLevelID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AccessLevelID
		{
			get
			{
				return this._AccessLevelID;
			}
			set
			{
				if ((this._AccessLevelID != value))
				{
					this.OnAccessLevelIDChanging(value);
					this.SendPropertyChanging();
					this._AccessLevelID = value;
					this.SendPropertyChanged("AccessLevelID");
					this.OnAccessLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessLevelName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccessLevelName
		{
			get
			{
				return this._AccessLevelName;
			}
			set
			{
				if ((this._AccessLevelName != value))
				{
					this.OnAccessLevelNameChanging(value);
					this.SendPropertyChanging();
					this._AccessLevelName = value;
					this.SendPropertyChanged("AccessLevelName");
					this.OnAccessLevelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessLevelDesc", DbType="NVarChar(MAX)")]
		public string AccessLevelDesc
		{
			get
			{
				return this._AccessLevelDesc;
			}
			set
			{
				if ((this._AccessLevelDesc != value))
				{
					this.OnAccessLevelDescChanging(value);
					this.SendPropertyChanging();
					this._AccessLevelDesc = value;
					this.SendPropertyChanged("AccessLevelDesc");
					this.OnAccessLevelDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReaderGroupID", DbType="Int")]
		public System.Nullable<int> ReaderGroupID
		{
			get
			{
				return this._ReaderGroupID;
			}
			set
			{
				if ((this._ReaderGroupID != value))
				{
					this.OnReaderGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ReaderGroupID = value;
					this.SendPropertyChanged("ReaderGroupID");
					this.OnReaderGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeSpecID", DbType="Int")]
		public System.Nullable<int> TimeSpecID
		{
			get
			{
				return this._TimeSpecID;
			}
			set
			{
				if ((this._TimeSpecID != value))
				{
					this.OnTimeSpecIDChanging(value);
					this.SendPropertyChanging();
					this._TimeSpecID = value;
					this.SendPropertyChanged("TimeSpecID");
					this.OnTimeSpecIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThreatLevelGroupID", DbType="Int")]
		public System.Nullable<int> ThreatLevelGroupID
		{
			get
			{
				return this._ThreatLevelGroupID;
			}
			set
			{
				if ((this._ThreatLevelGroupID != value))
				{
					this.OnThreatLevelGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ThreatLevelGroupID = value;
					this.SendPropertyChanged("ThreatLevelGroupID");
					this.OnThreatLevelGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Missing", DbType="Bit NOT NULL")]
		public bool Missing
		{
			get
			{
				return this._Missing;
			}
			set
			{
				if ((this._Missing != value))
				{
					this.OnMissingChanging(value);
					this.SendPropertyChanging();
					this._Missing = value;
					this.SendPropertyChanged("Missing");
					this.OnMissingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccessLevel_AccessLevelRole", Storage="_AccessLevelRoles", ThisKey="AccessLevelID", OtherKey="AccessLevelID")]
		public EntitySet<AccessLevelRole> AccessLevelRoles
		{
			get
			{
				return this._AccessLevelRoles;
			}
			set
			{
				this._AccessLevelRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AccessLevelRoles(AccessLevelRole entity)
		{
			this.SendPropertyChanging();
			entity.AccessLevel = this;
		}
		
		private void detach_AccessLevelRoles(AccessLevelRole entity)
		{
			this.SendPropertyChanging();
			entity.AccessLevel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobDisplay")]
	public partial class JobDisplay
	{
		
		private string _JobCode;
		
		private string _JobDescription;
		
		private System.DateTime _DateAdded;
		
		public JobDisplay()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string JobCode
		{
			get
			{
				return this._JobCode;
			}
			set
			{
				if ((this._JobCode != value))
				{
					this._JobCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobDescription", DbType="NVarChar(MAX)")]
		public string JobDescription
		{
			get
			{
				return this._JobDescription;
			}
			set
			{
				if ((this._JobDescription != value))
				{
					this._JobDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="Date NOT NULL")]
		public System.DateTime DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this._DateAdded = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccessLevelReport")]
	public partial class AccessLevelReport
	{
		
		private string _AccessLevelName;
		
		private string _AccessLevelDesc;
		
		private System.Nullable<int> _ReaderGroupID;
		
		private string _people;
		
		public AccessLevelReport()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessLevelName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccessLevelName
		{
			get
			{
				return this._AccessLevelName;
			}
			set
			{
				if ((this._AccessLevelName != value))
				{
					this._AccessLevelName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessLevelDesc", DbType="NVarChar(MAX)")]
		public string AccessLevelDesc
		{
			get
			{
				return this._AccessLevelDesc;
			}
			set
			{
				if ((this._AccessLevelDesc != value))
				{
					this._AccessLevelDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReaderGroupID", DbType="Int")]
		public System.Nullable<int> ReaderGroupID
		{
			get
			{
				return this._ReaderGroupID;
			}
			set
			{
				if ((this._ReaderGroupID != value))
				{
					this._ReaderGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_people", DbType="VarChar(2000)")]
		public string people
		{
			get
			{
				return this._people;
			}
			set
			{
				if ((this._people != value))
				{
					this._people = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmpAccessLevelReport")]
	public partial class EmpAccessLevelReport
	{
		
		private string _firstname;
		
		private string _lastname;
		
		private string _Deptdescr;
		
		private string _jobdescr;
		
		private string _levels;
		
		public EmpAccessLevelReport()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this._firstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this._lastname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deptdescr", DbType="NVarChar(50)")]
		public string Deptdescr
		{
			get
			{
				return this._Deptdescr;
			}
			set
			{
				if ((this._Deptdescr != value))
				{
					this._Deptdescr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jobdescr", DbType="NVarChar(50)")]
		public string jobdescr
		{
			get
			{
				return this._jobdescr;
			}
			set
			{
				if ((this._jobdescr != value))
				{
					this._jobdescr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_levels", DbType="VarChar(2000)")]
		public string levels
		{
			get
			{
				return this._levels;
			}
			set
			{
				if ((this._levels != value))
				{
					this._levels = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogEntries")]
	public partial class LogEntry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _EventDate;
		
		private int _Source;
		
		private int _Severity;
		
		private string _Message;
		
		private string _Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEventDateChanging(System.DateTime value);
    partial void OnEventDateChanged();
    partial void OnSourceChanging(int value);
    partial void OnSourceChanged();
    partial void OnSeverityChanging(int value);
    partial void OnSeverityChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
		
		public LogEntry()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDate", DbType="DateTime NOT NULL")]
		public System.DateTime EventDate
		{
			get
			{
				return this._EventDate;
			}
			set
			{
				if ((this._EventDate != value))
				{
					this.OnEventDateChanging(value);
					this.SendPropertyChanging();
					this._EventDate = value;
					this.SendPropertyChanged("EventDate");
					this.OnEventDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="Int NOT NULL")]
		public int Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Severity", DbType="Int NOT NULL")]
		public int Severity
		{
			get
			{
				return this._Severity;
			}
			set
			{
				if ((this._Severity != value))
				{
					this.OnSeverityChanging(value);
					this.SendPropertyChanging();
					this._Severity = value;
					this.SendPropertyChanged("Severity");
					this.OnSeverityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExternalSystems")]
	public partial class ExternalSystem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _Direction;
		
		private EntitySet<Setting> _Settings;
		
		private EntitySet<ExternalApplicationKey> _ExternalApplicationKeys;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDirectionChanging(int value);
    partial void OnDirectionChanged();
    #endregion
		
		public ExternalSystem()
		{
			this._Settings = new EntitySet<Setting>(new Action<Setting>(this.attach_Settings), new Action<Setting>(this.detach_Settings));
			this._ExternalApplicationKeys = new EntitySet<ExternalApplicationKey>(new Action<ExternalApplicationKey>(this.attach_ExternalApplicationKeys), new Action<ExternalApplicationKey>(this.detach_ExternalApplicationKeys));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direction", DbType="Int NOT NULL")]
		public int Direction
		{
			get
			{
				return this._Direction;
			}
			set
			{
				if ((this._Direction != value))
				{
					this.OnDirectionChanging(value);
					this.SendPropertyChanging();
					this._Direction = value;
					this.SendPropertyChanged("Direction");
					this.OnDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExternalSystem_Setting", Storage="_Settings", ThisKey="Id", OtherKey="SystemId")]
		public EntitySet<Setting> Settings
		{
			get
			{
				return this._Settings;
			}
			set
			{
				this._Settings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExternalSystem_ExternalApplicationKey", Storage="_ExternalApplicationKeys", ThisKey="Id", OtherKey="SystemId")]
		public EntitySet<ExternalApplicationKey> ExternalApplicationKeys
		{
			get
			{
				return this._ExternalApplicationKeys;
			}
			set
			{
				this._ExternalApplicationKeys.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Settings(Setting entity)
		{
			this.SendPropertyChanging();
			entity.ExternalSystem = this;
		}
		
		private void detach_Settings(Setting entity)
		{
			this.SendPropertyChanging();
			entity.ExternalSystem = null;
		}
		
		private void attach_ExternalApplicationKeys(ExternalApplicationKey entity)
		{
			this.SendPropertyChanging();
			entity.ExternalSystem = this;
		}
		
		private void detach_ExternalApplicationKeys(ExternalApplicationKey entity)
		{
			this.SendPropertyChanging();
			entity.ExternalSystem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Settings")]
	public partial class Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private bool _Viewable;
		
		private int _SystemId;
		
		private string _InputType;
		
		private string _Name;
		
		private string _Label;
		
		private string _Value;
		
		private int _OrderBy;
		
		private EntityRef<ExternalSystem> _ExternalSystem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnViewableChanging(bool value);
    partial void OnViewableChanged();
    partial void OnSystemIdChanging(int value);
    partial void OnSystemIdChanged();
    partial void OnInputTypeChanging(string value);
    partial void OnInputTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnOrderByChanging(int value);
    partial void OnOrderByChanged();
    #endregion
		
		public Setting()
		{
			this._ExternalSystem = default(EntityRef<ExternalSystem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Viewable", DbType="Bit NOT NULL")]
		public bool Viewable
		{
			get
			{
				return this._Viewable;
			}
			set
			{
				if ((this._Viewable != value))
				{
					this.OnViewableChanging(value);
					this.SendPropertyChanging();
					this._Viewable = value;
					this.SendPropertyChanged("Viewable");
					this.OnViewableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemId", DbType="Int NOT NULL")]
		public int SystemId
		{
			get
			{
				return this._SystemId;
			}
			set
			{
				if ((this._SystemId != value))
				{
					if (this._ExternalSystem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSystemIdChanging(value);
					this.SendPropertyChanging();
					this._SystemId = value;
					this.SendPropertyChanged("SystemId");
					this.OnSystemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputType", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string InputType
		{
			get
			{
				return this._InputType;
			}
			set
			{
				if ((this._InputType != value))
				{
					this.OnInputTypeChanging(value);
					this.SendPropertyChanging();
					this._InputType = value;
					this.SendPropertyChanged("InputType");
					this.OnInputTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderBy", DbType="Int NOT NULL")]
		public int OrderBy
		{
			get
			{
				return this._OrderBy;
			}
			set
			{
				if ((this._OrderBy != value))
				{
					this.OnOrderByChanging(value);
					this.SendPropertyChanging();
					this._OrderBy = value;
					this.SendPropertyChanged("OrderBy");
					this.OnOrderByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExternalSystem_Setting", Storage="_ExternalSystem", ThisKey="SystemId", OtherKey="Id", IsForeignKey=true)]
		public ExternalSystem ExternalSystem
		{
			get
			{
				return this._ExternalSystem.Entity;
			}
			set
			{
				ExternalSystem previousValue = this._ExternalSystem.Entity;
				if (((previousValue != value) 
							|| (this._ExternalSystem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExternalSystem.Entity = null;
						previousValue.Settings.Remove(this);
					}
					this._ExternalSystem.Entity = value;
					if ((value != null))
					{
						value.Settings.Add(this);
						this._SystemId = value.Id;
					}
					else
					{
						this._SystemId = default(int);
					}
					this.SendPropertyChanged("ExternalSystem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccessHistory")]
	public partial class AccessHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Accessed;
		
		private int _PersonId;
		
		private int _PortalId;
		
		private int _ReaderId;
		
		private int _Type;
		
		private System.Nullable<int> _Reason;
		
		private EntityRef<Reader> _Reader;
		
		private EntityRef<Portal> _Portal;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAccessedChanging(System.DateTime value);
    partial void OnAccessedChanged();
    partial void OnPersonIdChanging(int value);
    partial void OnPersonIdChanged();
    partial void OnPortalIdChanging(int value);
    partial void OnPortalIdChanged();
    partial void OnReaderIdChanging(int value);
    partial void OnReaderIdChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnReasonChanging(System.Nullable<int> value);
    partial void OnReasonChanged();
    #endregion
		
		public AccessHistory()
		{
			this._Reader = default(EntityRef<Reader>);
			this._Portal = default(EntityRef<Portal>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accessed", DbType="DateTime NOT NULL")]
		public System.DateTime Accessed
		{
			get
			{
				return this._Accessed;
			}
			set
			{
				if ((this._Accessed != value))
				{
					this.OnAccessedChanging(value);
					this.SendPropertyChanging();
					this._Accessed = value;
					this.SendPropertyChanged("Accessed");
					this.OnAccessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="Int NOT NULL")]
		public int PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int NOT NULL")]
		public int PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReaderId", DbType="Int NOT NULL")]
		public int ReaderId
		{
			get
			{
				return this._ReaderId;
			}
			set
			{
				if ((this._ReaderId != value))
				{
					if (this._Reader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReaderIdChanging(value);
					this.SendPropertyChanging();
					this._ReaderId = value;
					this.SendPropertyChanged("ReaderId");
					this.OnReaderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="Int")]
		public System.Nullable<int> Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reader_AccessHistory", Storage="_Reader", ThisKey="ReaderId", OtherKey="Id", IsForeignKey=true)]
		public Reader Reader
		{
			get
			{
				return this._Reader.Entity;
			}
			set
			{
				Reader previousValue = this._Reader.Entity;
				if (((previousValue != value) 
							|| (this._Reader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reader.Entity = null;
						previousValue.AccessHistories.Remove(this);
					}
					this._Reader.Entity = value;
					if ((value != null))
					{
						value.AccessHistories.Add(this);
						this._ReaderId = value.Id;
					}
					else
					{
						this._ReaderId = default(int);
					}
					this.SendPropertyChanged("Reader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_AccessHistory", Storage="_Portal", ThisKey="PortalId", OtherKey="Id", IsForeignKey=true)]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.AccessHistories.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.AccessHistories.Add(this);
						this._PortalId = value.Id;
					}
					else
					{
						this._PortalId = default(int);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_AccessHistory", Storage="_Person", ThisKey="PersonId", OtherKey="PersonID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.AccessHistories.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.AccessHistories.Add(this);
						this._PersonId = value.PersonID;
					}
					else
					{
						this._PersonId = default(int);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Locations")]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LocationID;
		
		private string _LocationName;
		
		private System.DateTime _DateAdded;
		
		private EntitySet<JCLRoleRule> _JCLRoleRules;
		
		private EntitySet<Portal> _Portals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    partial void OnLocationNameChanging(string value);
    partial void OnLocationNameChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    #endregion
		
		public Location()
		{
			this._JCLRoleRules = new EntitySet<JCLRoleRule>(new Action<JCLRoleRule>(this.attach_JCLRoleRules), new Action<JCLRoleRule>(this.detach_JCLRoleRules));
			this._Portals = new EntitySet<Portal>(new Action<Portal>(this.attach_Portals), new Action<Portal>(this.detach_Portals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this.OnLocationNameChanging(value);
					this.SendPropertyChanging();
					this._LocationName = value;
					this.SendPropertyChanged("LocationName");
					this.OnLocationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="Date NOT NULL")]
		public System.DateTime DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_JCLRoleRule", Storage="_JCLRoleRules", ThisKey="LocationID", OtherKey="Location")]
		public EntitySet<JCLRoleRule> JCLRoleRules
		{
			get
			{
				return this._JCLRoleRules;
			}
			set
			{
				this._JCLRoleRules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Portal", Storage="_Portals", ThisKey="LocationID", OtherKey="LocationId")]
		public EntitySet<Portal> Portals
		{
			get
			{
				return this._Portals;
			}
			set
			{
				this._Portals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JCLRoleRules(JCLRoleRule entity)
		{
			this.SendPropertyChanging();
			entity.Locations = this;
		}
		
		private void detach_JCLRoleRules(JCLRoleRule entity)
		{
			this.SendPropertyChanging();
			entity.Locations = null;
		}
		
		private void attach_Portals(Portal entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_Portals(Portal entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reader")]
	public partial class Reader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _PortalId;
		
		private System.DateTime _Added;
		
		private int _Direction;
		
		private EntitySet<AccessHistory> _AccessHistories;
		
		private EntityRef<Portal> _Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPortalIdChanging(int value);
    partial void OnPortalIdChanged();
    partial void OnAddedChanging(System.DateTime value);
    partial void OnAddedChanged();
    partial void OnDirectionChanging(int value);
    partial void OnDirectionChanged();
    #endregion
		
		public Reader()
		{
			this._AccessHistories = new EntitySet<AccessHistory>(new Action<AccessHistory>(this.attach_AccessHistories), new Action<AccessHistory>(this.detach_AccessHistories));
			this._Portal = default(EntityRef<Portal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int NOT NULL")]
		public int PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					if (this._Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Added", DbType="DateTime NOT NULL")]
		public System.DateTime Added
		{
			get
			{
				return this._Added;
			}
			set
			{
				if ((this._Added != value))
				{
					this.OnAddedChanging(value);
					this.SendPropertyChanging();
					this._Added = value;
					this.SendPropertyChanged("Added");
					this.OnAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direction", DbType="Int NOT NULL")]
		public int Direction
		{
			get
			{
				return this._Direction;
			}
			set
			{
				if ((this._Direction != value))
				{
					this.OnDirectionChanging(value);
					this.SendPropertyChanging();
					this._Direction = value;
					this.SendPropertyChanged("Direction");
					this.OnDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reader_AccessHistory", Storage="_AccessHistories", ThisKey="Id", OtherKey="ReaderId")]
		public EntitySet<AccessHistory> AccessHistories
		{
			get
			{
				return this._AccessHistories;
			}
			set
			{
				this._AccessHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_Reader", Storage="_Portal", ThisKey="PortalId", OtherKey="Id", IsForeignKey=true)]
		public Portal Portal
		{
			get
			{
				return this._Portal.Entity;
			}
			set
			{
				Portal previousValue = this._Portal.Entity;
				if (((previousValue != value) 
							|| (this._Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portal.Entity = null;
						previousValue.Readers.Remove(this);
					}
					this._Portal.Entity = value;
					if ((value != null))
					{
						value.Readers.Add(this);
						this._PortalId = value.Id;
					}
					else
					{
						this._PortalId = default(int);
					}
					this.SendPropertyChanged("Portal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AccessHistories(AccessHistory entity)
		{
			this.SendPropertyChanging();
			entity.Reader = this;
		}
		
		private void detach_AccessHistories(AccessHistory entity)
		{
			this.SendPropertyChanging();
			entity.Reader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExternalApplicationKeys")]
	public partial class ExternalApplicationKey : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EntityType;
		
		private int _InternalId;
		
		private string _ExternalId;
		
		private int _SystemId;
		
		private System.DateTime _Added;
		
		private EntityRef<ExternalSystem> _ExternalSystem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntityTypeChanging(string value);
    partial void OnEntityTypeChanged();
    partial void OnInternalIdChanging(int value);
    partial void OnInternalIdChanged();
    partial void OnExternalIdChanging(string value);
    partial void OnExternalIdChanged();
    partial void OnSystemIdChanging(int value);
    partial void OnSystemIdChanged();
    partial void OnAddedChanging(System.DateTime value);
    partial void OnAddedChanged();
    #endregion
		
		public ExternalApplicationKey()
		{
			this._ExternalSystem = default(EntityRef<ExternalSystem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityType", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EntityType
		{
			get
			{
				return this._EntityType;
			}
			set
			{
				if ((this._EntityType != value))
				{
					this.OnEntityTypeChanging(value);
					this.SendPropertyChanging();
					this._EntityType = value;
					this.SendPropertyChanged("EntityType");
					this.OnEntityTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InternalId
		{
			get
			{
				return this._InternalId;
			}
			set
			{
				if ((this._InternalId != value))
				{
					this.OnInternalIdChanging(value);
					this.SendPropertyChanging();
					this._InternalId = value;
					this.SendPropertyChanged("InternalId");
					this.OnInternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalId", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ExternalId
		{
			get
			{
				return this._ExternalId;
			}
			set
			{
				if ((this._ExternalId != value))
				{
					this.OnExternalIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalId = value;
					this.SendPropertyChanged("ExternalId");
					this.OnExternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SystemId
		{
			get
			{
				return this._SystemId;
			}
			set
			{
				if ((this._SystemId != value))
				{
					if (this._ExternalSystem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSystemIdChanging(value);
					this.SendPropertyChanging();
					this._SystemId = value;
					this.SendPropertyChanged("SystemId");
					this.OnSystemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Added", DbType="DateTime NOT NULL")]
		public System.DateTime Added
		{
			get
			{
				return this._Added;
			}
			set
			{
				if ((this._Added != value))
				{
					this.OnAddedChanging(value);
					this.SendPropertyChanging();
					this._Added = value;
					this.SendPropertyChanged("Added");
					this.OnAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExternalSystem_ExternalApplicationKey", Storage="_ExternalSystem", ThisKey="SystemId", OtherKey="Id", IsForeignKey=true)]
		public ExternalSystem ExternalSystem
		{
			get
			{
				return this._ExternalSystem.Entity;
			}
			set
			{
				ExternalSystem previousValue = this._ExternalSystem.Entity;
				if (((previousValue != value) 
							|| (this._ExternalSystem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExternalSystem.Entity = null;
						previousValue.ExternalApplicationKeys.Remove(this);
					}
					this._ExternalSystem.Entity = value;
					if ((value != null))
					{
						value.ExternalApplicationKeys.Add(this);
						this._SystemId = value.Id;
					}
					else
					{
						this._SystemId = default(int);
					}
					this.SendPropertyChanged("ExternalSystem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Portal")]
	public partial class Portal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.DateTime _Added;
		
		private int _LocationId;
		
		private string _NetworkAddress;
		
		private System.Nullable<int> _DeviceType;
		
		private string _Capabilities;
		
		private EntitySet<AccessHistory> _AccessHistories;
		
		private EntitySet<Reader> _Readers;
		
		private EntityRef<Location> _Location;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddedChanging(System.DateTime value);
    partial void OnAddedChanged();
    partial void OnLocationIdChanging(int value);
    partial void OnLocationIdChanged();
    partial void OnNetworkAddressChanging(string value);
    partial void OnNetworkAddressChanged();
    partial void OnDeviceTypeChanging(System.Nullable<int> value);
    partial void OnDeviceTypeChanged();
    partial void OnCapabilitiesChanging(string value);
    partial void OnCapabilitiesChanged();
    #endregion
		
		public Portal()
		{
			this._AccessHistories = new EntitySet<AccessHistory>(new Action<AccessHistory>(this.attach_AccessHistories), new Action<AccessHistory>(this.detach_AccessHistories));
			this._Readers = new EntitySet<Reader>(new Action<Reader>(this.attach_Readers), new Action<Reader>(this.detach_Readers));
			this._Location = default(EntityRef<Location>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Added", DbType="DateTime NOT NULL")]
		public System.DateTime Added
		{
			get
			{
				return this._Added;
			}
			set
			{
				if ((this._Added != value))
				{
					this.OnAddedChanging(value);
					this.SendPropertyChanging();
					this._Added = value;
					this.SendPropertyChanged("Added");
					this.OnAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="Int NOT NULL")]
		public int LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetworkAddress", DbType="VarChar(255)")]
		public string NetworkAddress
		{
			get
			{
				return this._NetworkAddress;
			}
			set
			{
				if ((this._NetworkAddress != value))
				{
					this.OnNetworkAddressChanging(value);
					this.SendPropertyChanging();
					this._NetworkAddress = value;
					this.SendPropertyChanged("NetworkAddress");
					this.OnNetworkAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceType", DbType="Int")]
		public System.Nullable<int> DeviceType
		{
			get
			{
				return this._DeviceType;
			}
			set
			{
				if ((this._DeviceType != value))
				{
					this.OnDeviceTypeChanging(value);
					this.SendPropertyChanging();
					this._DeviceType = value;
					this.SendPropertyChanged("DeviceType");
					this.OnDeviceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capabilities", DbType="VarChar(100)")]
		public string Capabilities
		{
			get
			{
				return this._Capabilities;
			}
			set
			{
				if ((this._Capabilities != value))
				{
					this.OnCapabilitiesChanging(value);
					this.SendPropertyChanging();
					this._Capabilities = value;
					this.SendPropertyChanged("Capabilities");
					this.OnCapabilitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_AccessHistory", Storage="_AccessHistories", ThisKey="Id", OtherKey="PortalId")]
		public EntitySet<AccessHistory> AccessHistories
		{
			get
			{
				return this._AccessHistories;
			}
			set
			{
				this._AccessHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portal_Reader", Storage="_Readers", ThisKey="Id", OtherKey="PortalId")]
		public EntitySet<Reader> Readers
		{
			get
			{
				return this._Readers;
			}
			set
			{
				this._Readers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Portal", Storage="_Location", ThisKey="LocationId", OtherKey="LocationID", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.Portals.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.Portals.Add(this);
						this._LocationId = value.LocationID;
					}
					else
					{
						this._LocationId = default(int);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AccessHistories(AccessHistory entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_AccessHistories(AccessHistory entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
		
		private void attach_Readers(Reader entity)
		{
			this.SendPropertyChanging();
			entity.Portal = this;
		}
		
		private void detach_Readers(Reader entity)
		{
			this.SendPropertyChanging();
			entity.Portal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BatchHistory")]
	public partial class BatchHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SystemId;
		
		private System.DateTime _RunStart;
		
		private System.DateTime _RunEnd;
		
		private string _Filename;
		
		private int _Outcome;
		
		private string _Message;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSystemIdChanging(int value);
    partial void OnSystemIdChanged();
    partial void OnRunStartChanging(System.DateTime value);
    partial void OnRunStartChanged();
    partial void OnRunEndChanging(System.DateTime value);
    partial void OnRunEndChanged();
    partial void OnFilenameChanging(string value);
    partial void OnFilenameChanged();
    partial void OnOutcomeChanging(int value);
    partial void OnOutcomeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    #endregion
		
		public BatchHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemId", DbType="Int NOT NULL")]
		public int SystemId
		{
			get
			{
				return this._SystemId;
			}
			set
			{
				if ((this._SystemId != value))
				{
					this.OnSystemIdChanging(value);
					this.SendPropertyChanging();
					this._SystemId = value;
					this.SendPropertyChanged("SystemId");
					this.OnSystemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunStart", DbType="DateTime NOT NULL")]
		public System.DateTime RunStart
		{
			get
			{
				return this._RunStart;
			}
			set
			{
				if ((this._RunStart != value))
				{
					this.OnRunStartChanging(value);
					this.SendPropertyChanging();
					this._RunStart = value;
					this.SendPropertyChanged("RunStart");
					this.OnRunStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunEnd", DbType="DateTime NOT NULL")]
		public System.DateTime RunEnd
		{
			get
			{
				return this._RunEnd;
			}
			set
			{
				if ((this._RunEnd != value))
				{
					this.OnRunEndChanging(value);
					this.SendPropertyChanging();
					this._RunEnd = value;
					this.SendPropertyChanged("RunEnd");
					this.OnRunEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filename", DbType="NVarChar(250)")]
		public string Filename
		{
			get
			{
				return this._Filename;
			}
			set
			{
				if ((this._Filename != value))
				{
					this.OnFilenameChanging(value);
					this.SendPropertyChanging();
					this._Filename = value;
					this.SendPropertyChanged("Filename");
					this.OnFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outcome", DbType="Int NOT NULL")]
		public int Outcome
		{
			get
			{
				return this._Outcome;
			}
			set
			{
				if ((this._Outcome != value))
				{
					this.OnOutcomeChanging(value);
					this.SendPropertyChanging();
					this._Outcome = value;
					this.SendPropertyChanged("Outcome");
					this.OnOutcomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.People")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PersonID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _MiddleName;
		
		private string _DeptID;
		
		private string _DeptDescr;
		
		private string _JobCode;
		
		private string _JobDescr;
		
		private string _BadgeNumber;
		
		private string _Facility;
		
		private bool _Active;
		
		private System.DateTime _LastUpdated;
		
		private int _LastUpdateMask;
		
		private string _username;
		
		private string _password;
		
		private System.Nullable<System.DateTime> _LastLogin;
		
		private System.Nullable<System.DateTime> _LastActivity;
		
		private int _FailedPasswordAttempts;
		
		private bool _LockedOut;
		
		private bool _IsAdmin;
		
		private bool _NeedsApproval;
		
		private bool _NeedsRulePass;
		
		private bool _NeedsUpload;
		
		private string _EmployeeID;
		
		private string _Credentials;
		
		private string _NickFirst;
		
		private string _UDF1;
		
		private string _UDF2;
		
		private string _UDF3;
		
		private string _UDF4;
		
		private string _UDF5;
		
		private string _UDF6;
		
		private string _UDF7;
		
		private string _UDF8;
		
		private string _UDF9;
		
		private string _UDF10;
		
		private string _UDF11;
		
		private string _UDF12;
		
		private string _UDF13;
		
		private string _UDF14;
		
		private string _UDF15;
		
		private string _UDF16;
		
		private string _UDF17;
		
		private string _UDF18;
		
		private string _UDF19;
		
		private string _UDF20;
		
		private System.DateTime _Added;
		
		private EntitySet<PeopleRole> _PeopleRoles;
		
		private EntitySet<AccessHistory> _AccessHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonIDChanging(int value);
    partial void OnPersonIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnDeptIDChanging(string value);
    partial void OnDeptIDChanged();
    partial void OnDeptDescrChanging(string value);
    partial void OnDeptDescrChanged();
    partial void OnJobCodeChanging(string value);
    partial void OnJobCodeChanged();
    partial void OnJobDescrChanging(string value);
    partial void OnJobDescrChanged();
    partial void OnBadgeNumberChanging(string value);
    partial void OnBadgeNumberChanged();
    partial void OnFacilityChanging(string value);
    partial void OnFacilityChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnLastUpdatedChanging(System.DateTime value);
    partial void OnLastUpdatedChanged();
    partial void OnLastUpdateMaskChanging(int value);
    partial void OnLastUpdateMaskChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnLastLoginChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginChanged();
    partial void OnLastActivityChanging(System.Nullable<System.DateTime> value);
    partial void OnLastActivityChanged();
    partial void OnFailedPasswordAttemptsChanging(int value);
    partial void OnFailedPasswordAttemptsChanged();
    partial void OnLockedOutChanging(bool value);
    partial void OnLockedOutChanged();
    partial void OnIsAdminChanging(bool value);
    partial void OnIsAdminChanged();
    partial void OnNeedsApprovalChanging(bool value);
    partial void OnNeedsApprovalChanged();
    partial void OnNeedsRulePassChanging(bool value);
    partial void OnNeedsRulePassChanged();
    partial void OnNeedsUploadChanging(bool value);
    partial void OnNeedsUploadChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnCredentialsChanging(string value);
    partial void OnCredentialsChanged();
    partial void OnNickFirstChanging(string value);
    partial void OnNickFirstChanged();
    partial void OnUDF1Changing(string value);
    partial void OnUDF1Changed();
    partial void OnUDF2Changing(string value);
    partial void OnUDF2Changed();
    partial void OnUDF3Changing(string value);
    partial void OnUDF3Changed();
    partial void OnUDF4Changing(string value);
    partial void OnUDF4Changed();
    partial void OnUDF5Changing(string value);
    partial void OnUDF5Changed();
    partial void OnUDF6Changing(string value);
    partial void OnUDF6Changed();
    partial void OnUDF7Changing(string value);
    partial void OnUDF7Changed();
    partial void OnUDF8Changing(string value);
    partial void OnUDF8Changed();
    partial void OnUDF9Changing(string value);
    partial void OnUDF9Changed();
    partial void OnUDF10Changing(string value);
    partial void OnUDF10Changed();
    partial void OnUDF11Changing(string value);
    partial void OnUDF11Changed();
    partial void OnUDF12Changing(string value);
    partial void OnUDF12Changed();
    partial void OnUDF13Changing(string value);
    partial void OnUDF13Changed();
    partial void OnUDF14Changing(string value);
    partial void OnUDF14Changed();
    partial void OnUDF15Changing(string value);
    partial void OnUDF15Changed();
    partial void OnUDF16Changing(string value);
    partial void OnUDF16Changed();
    partial void OnUDF17Changing(string value);
    partial void OnUDF17Changed();
    partial void OnUDF18Changing(string value);
    partial void OnUDF18Changed();
    partial void OnUDF19Changing(string value);
    partial void OnUDF19Changed();
    partial void OnUDF20Changing(string value);
    partial void OnUDF20Changed();
    partial void OnAddedChanging(System.DateTime value);
    partial void OnAddedChanged();
    #endregion
		
		public Person()
		{
			this._PeopleRoles = new EntitySet<PeopleRole>(new Action<PeopleRole>(this.attach_PeopleRoles), new Action<PeopleRole>(this.detach_PeopleRoles));
			this._AccessHistories = new EntitySet<AccessHistory>(new Action<AccessHistory>(this.attach_AccessHistories), new Action<AccessHistory>(this.detach_AccessHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="NVarChar(50)")]
		public string DeptID
		{
			get
			{
				return this._DeptID;
			}
			set
			{
				if ((this._DeptID != value))
				{
					this.OnDeptIDChanging(value);
					this.SendPropertyChanging();
					this._DeptID = value;
					this.SendPropertyChanged("DeptID");
					this.OnDeptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptDescr", DbType="NVarChar(50)")]
		public string DeptDescr
		{
			get
			{
				return this._DeptDescr;
			}
			set
			{
				if ((this._DeptDescr != value))
				{
					this.OnDeptDescrChanging(value);
					this.SendPropertyChanging();
					this._DeptDescr = value;
					this.SendPropertyChanged("DeptDescr");
					this.OnDeptDescrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCode", DbType="NVarChar(50)")]
		public string JobCode
		{
			get
			{
				return this._JobCode;
			}
			set
			{
				if ((this._JobCode != value))
				{
					this.OnJobCodeChanging(value);
					this.SendPropertyChanging();
					this._JobCode = value;
					this.SendPropertyChanged("JobCode");
					this.OnJobCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobDescr", DbType="NVarChar(50)")]
		public string JobDescr
		{
			get
			{
				return this._JobDescr;
			}
			set
			{
				if ((this._JobDescr != value))
				{
					this.OnJobDescrChanging(value);
					this.SendPropertyChanging();
					this._JobDescr = value;
					this.SendPropertyChanged("JobDescr");
					this.OnJobDescrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BadgeNumber", DbType="NVarChar(50)")]
		public string BadgeNumber
		{
			get
			{
				return this._BadgeNumber;
			}
			set
			{
				if ((this._BadgeNumber != value))
				{
					this.OnBadgeNumberChanging(value);
					this.SendPropertyChanging();
					this._BadgeNumber = value;
					this.SendPropertyChanged("BadgeNumber");
					this.OnBadgeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facility", DbType="NVarChar(50)")]
		public string Facility
		{
			get
			{
				return this._Facility;
			}
			set
			{
				if ((this._Facility != value))
				{
					this.OnFacilityChanging(value);
					this.SendPropertyChanging();
					this._Facility = value;
					this.SendPropertyChanged("Facility");
					this.OnFacilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="Date NOT NULL")]
		public System.DateTime LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateMask", DbType="Int NOT NULL")]
		public int LastUpdateMask
		{
			get
			{
				return this._LastUpdateMask;
			}
			set
			{
				if ((this._LastUpdateMask != value))
				{
					this.OnLastUpdateMaskChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateMask = value;
					this.SendPropertyChanged("LastUpdateMask");
					this.OnLastUpdateMaskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NChar(10)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(MAX)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this.OnLastLoginChanging(value);
					this.SendPropertyChanging();
					this._LastLogin = value;
					this.SendPropertyChanged("LastLogin");
					this.OnLastLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivity", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastActivity
		{
			get
			{
				return this._LastActivity;
			}
			set
			{
				if ((this._LastActivity != value))
				{
					this.OnLastActivityChanging(value);
					this.SendPropertyChanging();
					this._LastActivity = value;
					this.SendPropertyChanged("LastActivity");
					this.OnLastActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttempts", DbType="Int NOT NULL")]
		public int FailedPasswordAttempts
		{
			get
			{
				return this._FailedPasswordAttempts;
			}
			set
			{
				if ((this._FailedPasswordAttempts != value))
				{
					this.OnFailedPasswordAttemptsChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttempts = value;
					this.SendPropertyChanged("FailedPasswordAttempts");
					this.OnFailedPasswordAttemptsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockedOut", DbType="Bit NOT NULL")]
		public bool LockedOut
		{
			get
			{
				return this._LockedOut;
			}
			set
			{
				if ((this._LockedOut != value))
				{
					this.OnLockedOutChanging(value);
					this.SendPropertyChanging();
					this._LockedOut = value;
					this.SendPropertyChanged("LockedOut");
					this.OnLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit NOT NULL")]
		public bool IsAdmin
		{
			get
			{
				return this._IsAdmin;
			}
			set
			{
				if ((this._IsAdmin != value))
				{
					this.OnIsAdminChanging(value);
					this.SendPropertyChanging();
					this._IsAdmin = value;
					this.SendPropertyChanged("IsAdmin");
					this.OnIsAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedsApproval", DbType="Bit NOT NULL")]
		public bool NeedsApproval
		{
			get
			{
				return this._NeedsApproval;
			}
			set
			{
				if ((this._NeedsApproval != value))
				{
					this.OnNeedsApprovalChanging(value);
					this.SendPropertyChanging();
					this._NeedsApproval = value;
					this.SendPropertyChanged("NeedsApproval");
					this.OnNeedsApprovalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedsRulePass", DbType="Bit NOT NULL")]
		public bool NeedsRulePass
		{
			get
			{
				return this._NeedsRulePass;
			}
			set
			{
				if ((this._NeedsRulePass != value))
				{
					this.OnNeedsRulePassChanging(value);
					this.SendPropertyChanging();
					this._NeedsRulePass = value;
					this.SendPropertyChanged("NeedsRulePass");
					this.OnNeedsRulePassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedsUpload", DbType="Bit NOT NULL")]
		public bool NeedsUpload
		{
			get
			{
				return this._NeedsUpload;
			}
			set
			{
				if ((this._NeedsUpload != value))
				{
					this.OnNeedsUploadChanging(value);
					this.SendPropertyChanging();
					this._NeedsUpload = value;
					this.SendPropertyChanged("NeedsUpload");
					this.OnNeedsUploadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="VarChar(50)")]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credentials", DbType="NVarChar(MAX)")]
		public string Credentials
		{
			get
			{
				return this._Credentials;
			}
			set
			{
				if ((this._Credentials != value))
				{
					this.OnCredentialsChanging(value);
					this.SendPropertyChanging();
					this._Credentials = value;
					this.SendPropertyChanged("Credentials");
					this.OnCredentialsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NickFirst", DbType="NVarChar(MAX)")]
		public string NickFirst
		{
			get
			{
				return this._NickFirst;
			}
			set
			{
				if ((this._NickFirst != value))
				{
					this.OnNickFirstChanging(value);
					this.SendPropertyChanging();
					this._NickFirst = value;
					this.SendPropertyChanged("NickFirst");
					this.OnNickFirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDF1", DbType="NVarChar(MAX)")]
		public string UDF1
		{
			get
			{
				return this._UDF1;
			}
			set
			{
				if ((this._UDF1 != value))
				{
					this.OnUDF1Changing(value);
					this.SendPropertyChanging();
					this._UDF1 = value;
					this.SendPropertyChanged("UDF1");
					this.OnUDF1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDF2", DbType="NVarChar(MAX)")]
		public string UDF2
		{
			get
			{
				return this._UDF2;
			}
			set
			{
				if ((this._UDF2 != value))
				{
					this.OnUDF2Changing(value);
					this.SendPropertyChanging();
					this._UDF2 = value;
					this.SendPropertyChanged("UDF2");
					this.OnUDF2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDF3", DbType="NVarChar(MAX)")]
		public string UDF3
		{
			get
			{
				return this._UDF3;
			}
			set
			{
				if ((this._UDF3 != value))
				{
					this.OnUDF3Changing(value);
					this.SendPropertyChanging();
					this._UDF3 = value;
					this.SendPropertyChanged("UDF3");
					this.OnUDF3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDF4", DbType="NVarChar(MAX)")]
		public string UDF4
		{
			get
			{
				return this._UDF4;
			}
			set
			{
				if ((this._UDF4 != value))
				{
					this.OnUDF4Changing(value);
					this.SendPropertyChanging();
					this._UDF4 = value;
					this.SendPropertyChanged("UDF4");
					this.OnUDF4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDF5", DbType="NVarChar(MAX)")]
		public string UDF5
		{
			get
			{
				return this._UDF5;
			}
			set
			{
				if ((this._UDF5 != value))
				{
					this.OnUDF5Changing(value);
					this.SendPropertyChanging();
					this._UDF5 = value;
					this.SendPropertyChanged("UDF5");
					this.OnUDF5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDF6", DbType="NVarChar(MAX)")]
		public string UDF6
		{
			get
			{
				return this._UDF6;
			}
			set
			{
				if ((this._UDF6 != value))
				{
					this.OnUDF6Changing(value);
					this.SendPropertyChanging();
					this._UDF6 = value;
					this.SendPropertyChanged("UDF6");
					this.OnUDF6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDF7", DbType="NVarChar(MAX)")]
		public string UDF7
		{
			get
			{
				return this._UDF7;
			}
			set
			{
				if ((this._UDF7 != value))
				{
					this.OnUDF7Changing(value);
					this.SendPropertyChanging();
					this._UDF7 = value;
					this.SendPropertyChanged("UDF7");
					this.OnUDF7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDF8", DbType="NVarChar(MAX)")]
		public string UDF8
		{
			get
			{
				return this._UDF8;
			}
			set
			{
				if ((this._UDF8 != value))
				{
					this.OnUDF8Changing(value);
					this.SendPropertyChanging();
					this._UDF8 = value;
					this.SendPropertyChanged("UDF8");
					this.OnUDF8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDF9", DbType="NVarChar(MAX)")]
		public string UDF9
		{
			get
			{
				return this._UDF9;
			}
			set
			{
				if ((this._UDF9 != value))
				{
					this.OnUDF9Changing(value);
					this.SendPropertyChanging();
					this._UDF9 = value;
					this.SendPropertyChanged("UDF9");
					this.OnUDF9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDF10", DbType="NVarChar(MAX)")]
		public string UDF10
		{
			get
			{
				return this._UDF10;
			}
			set
			{
				if ((this._UDF10 != value))
				{
					this.OnUDF10Changing(value);
					this.SendPropertyChanging();
					this._UDF10 = value;
					this.SendPropertyChanged("UDF10");
					this.OnUDF10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDF11", DbType="NVarChar(MAX)")]
		public string UDF11
		{
			get
			{
				return this._UDF11;
			}
			set
			{
				if ((this._UDF11 != value))
				{
					this.OnUDF11Changing(value);
					this.SendPropertyChanging();
					this._UDF11 = value;
					this.SendPropertyChanged("UDF11");
					this.OnUDF11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDF12", DbType="NVarChar(MAX)")]
		public string UDF12
		{
			get
			{
				return this._UDF12;
			}
			set
			{
				if ((this._UDF12 != value))
				{
					this.OnUDF12Changing(value);
					this.SendPropertyChanging();
					this._UDF12 = value;
					this.SendPropertyChanged("UDF12");
					this.OnUDF12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDF13", DbType="NVarChar(MAX)")]
		public string UDF13
		{
			get
			{
				return this._UDF13;
			}
			set
			{
				if ((this._UDF13 != value))
				{
					this.OnUDF13Changing(value);
					this.SendPropertyChanging();
					this._UDF13 = value;
					this.SendPropertyChanged("UDF13");
					this.OnUDF13Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDF14", DbType="NVarChar(MAX)")]
		public string UDF14
		{
			get
			{
				return this._UDF14;
			}
			set
			{
				if ((this._UDF14 != value))
				{
					this.OnUDF14Changing(value);
					this.SendPropertyChanging();
					this._UDF14 = value;
					this.SendPropertyChanged("UDF14");
					this.OnUDF14Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDF15", DbType="NVarChar(MAX)")]
		public string UDF15
		{
			get
			{
				return this._UDF15;
			}
			set
			{
				if ((this._UDF15 != value))
				{
					this.OnUDF15Changing(value);
					this.SendPropertyChanging();
					this._UDF15 = value;
					this.SendPropertyChanged("UDF15");
					this.OnUDF15Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDF16", DbType="NVarChar(MAX)")]
		public string UDF16
		{
			get
			{
				return this._UDF16;
			}
			set
			{
				if ((this._UDF16 != value))
				{
					this.OnUDF16Changing(value);
					this.SendPropertyChanging();
					this._UDF16 = value;
					this.SendPropertyChanged("UDF16");
					this.OnUDF16Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDF17", DbType="NVarChar(MAX)")]
		public string UDF17
		{
			get
			{
				return this._UDF17;
			}
			set
			{
				if ((this._UDF17 != value))
				{
					this.OnUDF17Changing(value);
					this.SendPropertyChanging();
					this._UDF17 = value;
					this.SendPropertyChanged("UDF17");
					this.OnUDF17Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDF18", DbType="NVarChar(MAX)")]
		public string UDF18
		{
			get
			{
				return this._UDF18;
			}
			set
			{
				if ((this._UDF18 != value))
				{
					this.OnUDF18Changing(value);
					this.SendPropertyChanging();
					this._UDF18 = value;
					this.SendPropertyChanged("UDF18");
					this.OnUDF18Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDF19", DbType="NVarChar(MAX)")]
		public string UDF19
		{
			get
			{
				return this._UDF19;
			}
			set
			{
				if ((this._UDF19 != value))
				{
					this.OnUDF19Changing(value);
					this.SendPropertyChanging();
					this._UDF19 = value;
					this.SendPropertyChanged("UDF19");
					this.OnUDF19Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDF20", DbType="NVarChar(MAX)")]
		public string UDF20
		{
			get
			{
				return this._UDF20;
			}
			set
			{
				if ((this._UDF20 != value))
				{
					this.OnUDF20Changing(value);
					this.SendPropertyChanging();
					this._UDF20 = value;
					this.SendPropertyChanged("UDF20");
					this.OnUDF20Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Added", DbType="DateTime NOT NULL")]
		public System.DateTime Added
		{
			get
			{
				return this._Added;
			}
			set
			{
				if ((this._Added != value))
				{
					this.OnAddedChanging(value);
					this.SendPropertyChanging();
					this._Added = value;
					this.SendPropertyChanged("Added");
					this.OnAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_PeopleRole", Storage="_PeopleRoles", ThisKey="PersonID", OtherKey="PersonID")]
		public EntitySet<PeopleRole> PeopleRoles
		{
			get
			{
				return this._PeopleRoles;
			}
			set
			{
				this._PeopleRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_AccessHistory", Storage="_AccessHistories", ThisKey="PersonID", OtherKey="PersonId")]
		public EntitySet<AccessHistory> AccessHistories
		{
			get
			{
				return this._AccessHistories;
			}
			set
			{
				this._AccessHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PeopleRoles(PeopleRole entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_PeopleRoles(PeopleRole entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_AccessHistories(AccessHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_AccessHistories(AccessHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
	}
	
	public partial class LevelsAvailableForRoleResult
	{
		
		private int _AccessLevelID;
		
		private string _AccessLevelName;
		
		private string _AccessLevelDesc;
		
		public LevelsAvailableForRoleResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessLevelID", DbType="Int NOT NULL")]
		public int AccessLevelID
		{
			get
			{
				return this._AccessLevelID;
			}
			set
			{
				if ((this._AccessLevelID != value))
				{
					this._AccessLevelID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessLevelName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccessLevelName
		{
			get
			{
				return this._AccessLevelName;
			}
			set
			{
				if ((this._AccessLevelName != value))
				{
					this._AccessLevelName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessLevelDesc", DbType="NVarChar(MAX)")]
		public string AccessLevelDesc
		{
			get
			{
				return this._AccessLevelDesc;
			}
			set
			{
				if ((this._AccessLevelDesc != value))
				{
					this._AccessLevelDesc = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
